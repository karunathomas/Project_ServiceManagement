<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Karuna-Temp85" failures="0" tests="1" name="com.qa.testscripts.AddReperationTest" time="98.016" errors="1" timestamp="02 Jul 2023 08:25:55 GMT" skipped="0">
  <testcase classname="com.qa.testscripts.AddReperationTest" name="verifyUserIsAbleToAddReperation" time="98.016">
    <error message="Element should have been &quot;select&quot; but was &quot;span&quot;
Build info: version: &#039;4.4.0&#039;, revision: &#039;e5c75ed026a&#039;
System info: host: &#039;KARUNA-TEMP85&#039;, ip: &#039;192.168.98.88&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;11.0.17&#039;
Driver info: driver.version: unknown" type="org.openqa.selenium.support.ui.UnexpectedTagNameException">
      <![CDATA[org.openqa.selenium.support.ui.UnexpectedTagNameException: Element should have been "select" but was "span"
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'KARUNA-TEMP85', ip: '192.168.98.88', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.17'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.<init>(Select.java:49)
at com.qa.utilities.PageUtility.selectDropdownbyText(PageUtility.java:37)
at com.qa.pages.AddReparation.selectAsignee(AddReparation.java:105)
at com.qa.testscripts.AddReperationTest.verifyUserIsAbleToAddReperation(AddReperationTest.java:30)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
    </error>
  </testcase> <!-- verifyUserIsAbleToAddReperation -->
</testsuite> <!-- com.qa.testscripts.AddReperationTest -->
